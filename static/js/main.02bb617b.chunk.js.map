{"version":3,"sources":["components/Login.js","components/NavBar.js","components/map/TerraMap.js","components/settings/Settings.js","components/settings/drivers/Drivers.js","components/settings/drivers/NewDriver.js","components/settings/drivers/UpdateDriver.js","components/settings/vehicles/Vehicles.js","components/settings/vehicles/NewVehicle.js","components/settings/vehicles/UpdateVehicle.js","components/settings/journeys/Journeys.js","components/settings/journeys/NewJourney.js","Terra.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","onSubmit","ev","preventDefault","axios","post","then","res","data","success","sessionStorage","setItem","JSON","stringify","token","user","defaults","headers","common","history","push","catch","console","error","type","name","onChange","e","target","value","required","NavBar","parse","getItem","showDropdown","setShowDropdown","className","onMapMenu","journeys","map","j","idx","vehicle","code","id","_id","onClick","toggleRoute","status","userType","simulateJourneys","onMouseEnter","onMouseLeave","firstName","lastName","handleUrlRoute","removeItem","undefined","require","bounds","routes","simulationData","TerraMap","setMap","setJourneys","useEffect","get","animatePolyLine","coordinates","a","L","motion","polyline","color","auto","duration","removeOnEnd","showMarker","addTo","showRoute","waypoints","journeyId","fitBounds","Object","values","leafletElement","Routing","control","router","mapbox","containerClassName","on","route","removeRoute","remove","keys","length","checked","find","originGeoCode","lat","lng","destinationGeoCode","url","i","MapContainer","center","zoomControl","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","ZoomControl","position","Settings","showMapMenu","Driver","drivers","setDrivers","driver","mobileNumber","licenseNumber","setDriver","handleChange","placeholder","BASE_URL","UpdateDriver","match","params","put","style","backgroundImage","photoUrl","backgroundSize","licenseExpiry","split","Vehicle","vehicles","setVehicles","plateNumber","class","locationAddress","weight","volume","setVehicle","vehicleClass","vaue","UpdateVehicle","homeAddress","Journeys","addJourney","setAddJourney","selectedVehicle","setSelectedVehicle","mapVehicleProps","imageUrl","vehicleId","disabled","journey","origin","destination","instruction","NewJourney","setJourney","Date","startDate","setStartDate","marginBottom","Terra","getCurrentUser","isAdmin","exact","path","render","to","Drivers","NewDriver","Vehicles","NewVehicle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02bb617b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Login = props => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/login`, {email, password})\n    .then( res => {\n      if(res.data.success){\n        sessionStorage.setItem('token', JSON.stringify(res.data.token))\n        sessionStorage.setItem('user', JSON.stringify(res.data.user))\n        axios.defaults.headers.common['Authorization'] = `Bearer ${res.data.token}`\n        props.history.push('/maps')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input type=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} required />\n          <input type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} required />\n          <button>Login</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport '../Terra.css'\n\nconst NavBar = props => {\n  const user = JSON.parse(sessionStorage.getItem('user'))\n  const [showDropdown, setShowDropdown] = useState(false)\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('token')\n    sessionStorage.removeItem('user')\n    axios.defaults.headers.common['Authorization'] = undefined\n\n    props.history.push('/login');\n  }\n\n  const toggleRoute = ev => {\n    const journeyId = ev.target.id\n\n    if(ev.target.checked === true){\n      const data = props.journeys.find(j => j._id === journeyId);\n\n      const waypoints = [\n        [\n          data.originGeoCode.lat,\n          data.originGeoCode.lng\n        ],\n        [\n          data.destinationGeoCode.lat,\n          data.destinationGeoCode.lng\n        ]\n      ]\n\n      props.showRoute(waypoints, journeyId)\n    } else {\n      props.removeRoute(journeyId)\n    }\n  }\n\n  return(\n    <div className=\"navbar\">\n      {\n        props.onMapMenu ?\n        <div className=\"menu collapsed\">\n          <span>MENU</span>\n          <div className=\"menu-items\">\n            {\n              props.journeys.map( (j, idx) =>\n                <div key={idx} className=\"item\">\n                  <div className=\"first\">\n                    <span>{j.vehicle.code}</span>\n                    <input\n                      id={j._id}\n                      type=\"checkbox\"\n                      onClick={props.toggleRoute}\n                    />\n                  </div>\n                  <div className=\"second\">\n                    <span>{j.status}</span>\n                    <span>OR</span>\n                    <span>DT</span>\n                  </div>\n                </div>\n              )\n            }\n          </div>\n        </div> : null\n      }\n      <div className=\"settings\">\n        {\n          user.userType !== 'driver' ?\n          <div onClick={props.simulateJourneys}>Simulate</div> : null\n        }\n        <div onMouseEnter={() => setShowDropdown(true)} onMouseLeave={() => setShowDropdown(false)}>\n          <div className=\"profile-image\" >\n            {user.firstName} {user.lastName} O\n          </div>\n          {\n            showDropdown ?\n            <div className=\"dropdown-wrapper\">\n              <div className=\"dropdown\">\n                <div>Profile</div>\n                {\n                  user.userType !== 'admin' ?\n                  null : props.onMapMenu ?\n                  <div onClick={() => props.handleUrlRoute('/settings')}>Settings</div> :\n                  <div onClick={() => props.handleUrlRoute('/maps')}>Maps</div>\n                }\n                <div onClick={handleLogout}>Logout</div>\n              </div>\n            </div> : null\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n\n// const NavBar = props => {\n//   let idx = props.idx !==null ? props.idx + 1 : 0\n//\n// console.log(idx);\n//   return(\n//     <div className=\"navbar\">\n//       <div\n//         onClick={() => props.addRoute(idx)}\n//         className=\"menu\"\n//       >\n//         MENU\n//       </div>\n//       <div className=\"settings\">\n//         <div>Profile</div>\n//         <div>Settings</div>\n//       </div>\n//     </div>\n//   )\n// }\n//\n// export default NavBar\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../NavBar'\nimport Routing from './Routing'\nimport L from 'leaflet'\nimport { MapContainer, TileLayer, Popup, ZoomControl } from 'react-leaflet'\nrequire('leaflet.motion/dist/leaflet.motion.min.js')\n\nconst MAPBOX_API_KEY = 'pk.eyJ1Ijoiamt1cHMiLCJhIjoiY2tramFsN2EyMDJmNjJwcGVodms0ZDIzeiJ9.g1MbhlX-djVh_CZYt7t-dQ'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst bounds = {} //scale&zoom map to show all routes\nconst routes = {} //keep track of visible routes on map\nconst simulationData = {} //keep track for journey simulation\n\nconst TerraMap = props => {\n  const [map, setMap] = useState(null)\n  const [wayPoints, setWayPoints] = useState(null)\n  const [wayPointsId, setWayPointsId] = useState(null)\n  const [journeys, setJourneys] = useState([])\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/journeys`)\n    .then( res => {\n      setJourneys(res.data)\n    })\n    .catch( console.error )\n  }, [])\n\n  const animatePolyLine = async coordinates => {\n    const polyLineElement = L.motion.polyline(coordinates,\n      {\n        color: \"transparent\"\n      },\n      {\n        auto: true,\n        duration: 1000\n      },\n      {\n        removeOnEnd: true,\n        showMarker: true,\n      }\n    ).addTo(map);\n  }\n\n  const timer = ms => new Promise(res => setTimeout(res, ms));\n\n  const startJourney = async () => {\n    const coordinates = Object.values(simulationData)[0]\n    //will change up this to be dynamic later\n\n    for(let i = 0; i < coordinates.length - 1; i++){\n      const coord = [ coordinates[i], coordinates[i + 1] ]\n\n      animatePolyLine(coord);\n      await timer(800)\n    }\n  }\n\n  const simulateJourneys = () => {\n    let coord = []\n    const coordinates = Object.values(simulationData)\n\n    if(coordinates.length > 0){\n      for(let i = 0; i < coordinates.length; i++){\n        animatePolyLine(coordinates[i])\n      }\n    }\n  }\n\n  const toggleRoute = ev => {\n    const journeyId = ev.target.id\n\n    if(ev.target.checked === true){\n      const data = journeys.find(j => j._id === journeyId);\n\n      const waypoints = [\n        [\n          data.originGeoCode.lat,\n          data.originGeoCode.lng\n        ],\n        [\n          data.destinationGeoCode.lat,\n          data.destinationGeoCode.lng\n        ]\n      ]\n\n      showRoute(waypoints, journeyId)\n\n    } else {\n      removeRoute(journeyId)\n    }\n  }\n\n  const showRoute = (waypoints, journeyId) => {\n    bounds[journeyId] = waypoints\n    map.fitBounds(Object.values(bounds))\n\n    const leafletElement = L.Routing.control({\n      router: L.Routing.mapbox(MAPBOX_API_KEY),\n      waypoints: [\n        waypoints[0],\n        waypoints[1]\n      ],\n      containerClassName: 'itinerary-wrapper'\n    }).addTo(map);\n\n    leafletElement.on('routeselected', ev => {\n      routes[journeyId] = leafletElement\n      simulationData[journeyId] = ev.route.coordinates\n    })\n\n  }\n\n  const removeRoute = journeyId => {\n    const route = routes[journeyId]\n    delete bounds[journeyId]\n    delete routes[journeyId]\n    delete simulationData[journeyId]\n    route.remove()\n\n    if(Object.keys(bounds).length > 0){\n      map.fitBounds(Object.values(bounds))\n    }\n  }\n\n  const setSimulationData = (leafletElement, route) => {\n    routes[wayPointsId] = leafletElement\n    simulationData[wayPointsId] = route.coordinates\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        journeys={journeys}\n        toggleRoute={toggleRoute}\n        onMapMenu={true}\n        handleUrlRoute={handleUrlRoute}\n        simulateJourneys={simulateJourneys}\n      />\n      <MapContainer center={[-37.840935, 144.946457]} zoomControl={false} zoom={13} scrollWheelZoom={false} whenCreated={setMap}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        <ZoomControl position={'bottomright'} />\n        {\n          // map && wayPoints !== null ?\n          // <Routing\n          //   map={map}\n          //   wayPoints={wayPoints}\n          //   setSimulationData={setSimulationData}\n          // />\n          // : null\n        }\n      </MapContainer>\n    </div>\n  )\n}\n\nexport default TerraMap\n\n\n\n// let bounds = []\n// let coord = null\n// const TerraMap = props => {\n  //\n  //   const wayPoints = [\n    //     {\n      //       start: [-37.90574549300565, 144.7466052650177],\n      //       end: [-37.81086045036506, 144.9598019963491]\n      //     },\n      //     {\n        //       start: [-37.91067303518276, 144.76989648087897],\n        //       end: [-37.92689762476188, 144.63457410870475]\n        //     }\n        //   ]\n        //\n        //   const [map, setMap] = useState(null)\n        //   const [idx, setIdx] = useState(null)\n        //\n        //   const animateMarker = coordinates => {\n          //     if(map && idx !== null){\n            //       L.motion.polyline(coordinates, {\n              //         color: \"transparent\"\n              //       }, {\n                //         auto: true,\n                //         duration: 8000,\n                //         easing: L.Motion.Ease.easeInOutQuart\n                //       }, {\n                  //         removeOnEnd: true,\n                  //         showMarker: true,\n                  //       }).addTo(map);\n                  //     }\n                  //   }\n                  //\n                  //\n                  //   const addRoute = value => {\n                    //     bounds = []\n                    //     bounds.push(wayPoints[value].start)\n                    //     bounds.push(wayPoints[value].end)\n                    //\n                    //     setIdx(value)\n                    //     console.log('bounds:', bounds);\n                    //     map.fitBounds(bounds)\n                    //   }\n                    //\n                    //\n                    //   return(\n                      //     <div>\n                      //       <NavBar addRoute={addRoute} idx={idx}/>\n                    //       <MapContainer center={[-37.840935, 144.946457]} zoomControl={false} zoom={13} scrollWheelZoom={false} whenCreated={setMap}>\n                    //         <TileLayer\n                    //           attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    //           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    //         />\n                  //\n                  //         <ZoomControl position={'bottomright'} />\n                //         {\n                  //           map && idx !== null ?\n                  //\n                  //             <Routing map={map} points={bounds} animateMarker={animateMarker}/>\n                //           : null\n                //         }\n                //       </MapContainer>\n              //     </div>\n            //   )\n            // }\n","import React from 'react'\nimport NavBar from '../NavBar'\n\n\nconst Settings = props => {\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return (\n    <div>\n      <NavBar\n        showMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n    <div className=\"settings-wrapper\">\n        <h2>TerraMap for Logistics Coy.</h2>\n        <div>\n          <div>Users</div>\n          <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n          <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n          <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst Driver = props => {\n\n  const [drivers, setDrivers] = useState([])\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers`)\n    .then(res => {\n      // console.log(res.data);\n      setDrivers(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <button\n                onClick={() => handleUrlRoute('/settings/drivers/new')}\n              >\n                Add Driver\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li></li>\n                <li>Full Name</li>\n                <li>Mobile Number</li>\n                <li>Email Address</li>\n                <li>Driver's License</li>\n                <li>Status</li> {\n                  // driving, unassigned\n                }\n                <li>Action</li>\n              </ul>\n              {\n                drivers.map( (driver, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li></li>\n                    <li>{driver.firstName} {driver.lastName}</li>\n                    <li>{driver.mobileNumber}</li>\n                    <li>{driver.email}</li>\n                    <li>{driver.licenseNumber}</li>\n                    <li>{driver.status}</li>\n                    <li>\n                      <span onClick={() => {handleUrlRoute(`/settings/drivers/${driver._id}/edit`)}}>Update</span>\n                      &nbsp;|&nbsp;\n                      <span>Delete</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Driver\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Driver = props => {\n\n  const [driver, setDriver] = useState(null)\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setDriver(driver => ({\n      ...driver, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/drivers`, driver)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/drivers')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Driver</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                <div>\n                  <label className=\"profile-photo\">\n                    <input  type=\"file\" />\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>First Name:</p>\n                    <input name=\"firstName\" type=\"text\" placeholder=\"First Name\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Last Name:</p>\n                    <input name=\"lastName\" type=\"text\" placeholder=\"Last Name\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Mobile Number:</p>\n                    <input name=\"mobileNumber\" type=\"text\" placeholder=\"Mobile Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Email Address:</p>\n                    <input name=\"email\" type=\"email\" placeholder=\"Email Address\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Drivers License Number:</p>\n                    <input name=\"licenseNumber\" type=\"text\" placeholder=\"License Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>License Expiry Date:</p>\n                    <input name=\"licenseExpiry\" type=\"date\" placeholder=\"Expiry Date\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Contact Address:</p>\n                    <input type=\"text\" placeholder=\"Contact address\" required/>\n                  </label>\n                </div>\n                <div className=\"button-wrapper\">\n                  <button className=\"form-button\">Save New Driver</button>\n                </div>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Driver\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst CLOUDINARY_URL = 'https://res.cloudinary.com/dxmmpe1wt/image/upload/v1612076361/'\n\nconst UpdateDriver = props => {\n\n  const [driver, setDriver] = useState(null)\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers/${props.match.params.id}`)\n    .then(res => {\n      setDriver(res.data)\n    })\n    .catch(console.error)\n  },[])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setDriver(driver => ({\n      ...driver, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.put(`${BASE_URL}/drivers/${props.match.params.id}`, driver)\n    .then( res => {\n      if(res.data.success){\n        props.history.push('/settings/drivers')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n              {\n              driver !== null ?\n              <div>\n                <div className=\"heading\">Update Driver</div>\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-wrapper\">\n                    <div>\n                      <label className=\"profile-photo update\" style={{backgroundImage: `url(${CLOUDINARY_URL}/${driver.photoUrl})`, backgroundSize: \"cover\"}}>\n                        <input  type=\"file\" />\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>First Name:</p>\n                        <input name=\"firstName\" type=\"text\" value={driver.firstName} placeholder=\"First Name\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>Last Name:</p>\n                        <input name=\"lastName\" type=\"text\" value={driver.lastName} placeholder=\"Last Name\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Mobile Number:</p>\n                        <input name=\"mobileNumber\" type=\"text\" value={driver.mobileNumber} placeholder=\"Mobile Number\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>Email Address:</p>\n                        <input name=\"email\" type=\"email\" value={driver.email}  placeholder=\"Email Address\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Drivers License Number:</p>\n                        <input name=\"licenseNumber\" type=\"text\" value={driver.licenseNumber} placeholder=\"License Number\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>License Expiry Date:</p>\n                        <input name=\"licenseExpiry\" type=\"date\" value={driver.licenseExpiry.split('T')[0]} placeholder=\"Expiry Date\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Contact Address:</p>\n                        <input type=\"text\" placeholder=\"Contact address\" required/>\n                      </label>\n                    </div>\n                    <div className=\"button-wrapper\">\n                      <button className=\"form-button\">Update Driver</button>\n                    </div>\n                  </div>\n                </form>\n              </div> : null\n              }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateDriver\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Vehicle = props => {\n\n  const [vehicles, setVehicles] = useState([])\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles`)\n    .then(res => {\n      // console.log(res.data);\n      setVehicles(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <button\n                onClick={() => handleUrlRoute('/settings/vehicles/new')}\n              >\n                Add Vehicle\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li></li>\n                <li>ID / Plate Number</li>\n                <li>Class</li>\n                <li>Curent Location</li>\n                <li>Weight  / Volume</li>\n                <li>Status</li>\n                <li>Action</li>\n              </ul>\n              {\n                vehicles.map( (vehicle, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li></li>\n                    <li>{vehicle.code} / {vehicle.plateNumber}</li>\n                    <li>{vehicle.class.split('(')[0]}</li>\n                    <li>{vehicle.locationAddress}</li>\n                    <li>{vehicle.weight} kg / {vehicle.volume} cubic</li>\n                    <li>{vehicle.status}</li>\n                    <li>\n                      <span onClick={() => {handleUrlRoute(`/settings/vehicles/${vehicle._id}/edit`)}}>Update</span>\n                      &nbsp;|&nbsp;\n                      <span>Delete</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Vehicle\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Vehicle = props => {\n\n  const [vehicle, setVehicle] = useState(null)\n  const [vehicleClass] = useState('Class 1')\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setVehicle(vehicle => ({\n      ...vehicle, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n    if(!vehicle.class) vehicle.class = vehicleClass\n\n    axios.post(`${BASE_URL}/vehicles`, vehicle)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/vehicles')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Vehicle</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                <div>\n                  <label className=\"profile-photo\">\n                    <input  type=\"file\" />\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>ID Number / Code:</p>\n                    <input name=\"code\" type=\"text\" placeholder=\"Id Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Plate Number:</p>\n                    <input name=\"plateNumber\" type=\"text\" placeholder=\"Plate Number\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Vechle Class:</p>\n                    <select name=\"class\" onChange={handleChange} required>\n                      <option value=\"Class 1\">Class 1 (Motorcycle)</option>\n                      <option vaue=\"Class 2\">Class 2 (Passenger car)</option>\n                      <option vaue=\"Class 3\">Class 3 (4 tire, single unit)</option>\n                      <option vaue=\"Class 4\">Class 4 (Bus)</option>\n                      <option vaue=\"Class 5\">Class 5 (2 axle, 6 tire, single unit)</option>\n                      <option vaue=\"Class 6\">Class 6 (3 axle, single unit)</option>\n                      <option vaue=\"Class 7\">Class 7 (4 or more axle, single unit)</option>\n                      <option vaue=\"Class 8\">Class 8 (4 or less axle, single trailer)</option>\n                      <option vaue=\"Class 9\">Class 9 (5 axle tractor semitrailer)</option>\n                      <option vaue=\"Class 10\">Class 10 (6 or more axle, single trailer)</option>\n                      <option vaue=\"Class 11\">Class 11 (5 or less axle, multi-trailer )</option>\n                      <option vaue=\"Class 12\">Class 12 (6 axle, multi-trailer)</option>\n                      <option vaue=\"Class 13\">Class 13 (7 or more axle, multi-trailer)</option>\n                    </select>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Weight (kg)</p>\n                    <input name=\"weight\" type=\"text\" placeholder=\"Weight\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Volume (cubic meter)</p>\n                    <input name=\"volume\" type=\"text\" placeholder=\"Volume\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Parking Address:</p>\n                    <input name=\"homeAddress\" type=\"text\" placeholder=\"Enter address\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"button-wrapper\">\n                  <button className=\"form-button\">Save New Vehicle</button>\n                </div>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Vehicle\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst UpdateVehicle = props => {\n\n  const [vehicle, setVehicle] = useState(null)\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles/${props.match.params.id}`)\n    .then(res => {\n      setVehicle(res.data)\n    })\n    .catch(console.error)\n  },[])\n\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setVehicle(vehicle => ({\n      ...vehicle, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.put(`${BASE_URL}/vehicles/${props.match.params.id}`, vehicle)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/vehicles')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            {\n              vehicle !== null ?\n              <div>\n                <div className=\"heading\">New Vehicle</div>\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-wrapper\">\n                  <div>\n                    <label className=\"profile-photo update\">\n                      <input  type=\"file\" />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>ID Number / Code:</p>\n                      <input name=\"code\" value={vehicle.code} type=\"text\" placeholder=\"Id Number\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Plate Number:</p>\n                      <input name=\"plateNumber\" value={vehicle.plateNumber} type=\"text\" placeholder=\"Plate Number\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Vechle Class:</p>\n                      <select name=\"class\" value={vehicle.class} onChange={handleChange} required>\n                        <option value=\"Class 1\">Class 1 (Motorcycle)</option>\n                        <option vaue=\"Class 2\">Class 2 (Passenger car)</option>\n                        <option vaue=\"Class 3\">Class 3 (4 tire, single unit)</option>\n                        <option vaue=\"Class 4\">Class 4 (Bus)</option>\n                        <option vaue=\"Class 5\">Class 5 (2 axle, 6 tire, single unit)</option>\n                        <option vaue=\"Class 6\">Class 6 (3 axle, single unit)</option>\n                        <option vaue=\"Class 7\">Class 7 (4 or more axle, single unit)</option>\n                        <option vaue=\"Class 8\">Class 8 (4 or less axle, single trailer)</option>\n                        <option vaue=\"Class 9\">Class 9 (5 axle tractor semitrailer)</option>\n                        <option vaue=\"Class 10\">Class 10 (6 or more axle, single trailer)</option>\n                        <option vaue=\"Class 11\">Class 11 (5 or less axle, multi-trailer )</option>\n                        <option vaue=\"Class 12\">Class 12 (6 axle, multi-trailer)</option>\n                        <option vaue=\"Class 13\">Class 13 (7 or more axle, multi-trailer)</option>\n                      </select>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Weight (kg)</p>\n                      <input name=\"weight\" value={vehicle.weight} type=\"text\" placeholder=\"Weight\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Volume (cubic meter)</p>\n                      <input name=\"volume\" value={vehicle.volume} type=\"text\" placeholder=\"Volume\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Parking Address:</p>\n                      <input name=\"homeAddress\" value={vehicle.homeAddress} type=\"text\" placeholder=\"Enter address\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"button-wrapper\">\n                    <button className=\"form-button\">Update Vehicle</button>\n                  </div>\n                </div>\n                </form>\n              </div> : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateVehicle\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Journeys = props => {\n\n  const [vehicles, setVehicles] = useState([])\n  const [journeys, setJourneys] = useState([])\n  const [addJourney, setAddJourney] = useState(false)\n  const [selectedVehicle, setSelectedVehicle] = useState('')\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles`)\n    .then(res => {\n      const mapVehicleProps = res.data.map( vehicle => {\n        return {\n          id: vehicle._id,\n          code: vehicle.code,\n          plateNumber: vehicle.plateNumber,\n          imageUrl: vehicle.imageUrl\n        }\n      })\n\n      setVehicles(mapVehicleProps)\n    })\n    .catch(console.error)\n  }, [])\n\n  const getJourneys = ev => {\n    const vehicleId = ev.target.value\n\n    if(vehicleId !== \"none\"){\n      axios.get(`${BASE_URL}/journeys/vehicle/${vehicleId}`)\n      .then( res => {\n        setJourneys(res.data)\n        setAddJourney(true)\n        setSelectedVehicle(vehicleId)\n      })\n      .catch(console.error)\n    } else {\n      setJourneys([])\n      setAddJourney(false)\n      setSelectedVehicle('')\n    }\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <select onChange={getJourneys} className=\"standard\">\n                <option value=\"none\">Select a vehicle</option>\n                {\n                  vehicles.map( (vehicle, idx) =>\n                    <option key={idx} value={vehicle.id}>\n                      {vehicle.code} / {vehicle.plateNumber}\n                    </option>\n                  )\n                }\n              </select>\n              <button\n                onClick={() => handleUrlRoute(`/settings/journeys/vehicle/${selectedVehicle}/new`)}\n                disabled={ !addJourney }\n                >\n                Add a Journey\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li>Origin</li>\n                <li>Destination</li>\n                <li>Duration</li>\n                <li>Instruction</li>\n                <li>Driver Assigned</li>\n                <li>Status</li>\n                <li>Action</li>\n              </ul>\n              {\n                journeys.map( (journey, idx) =>\n                  <ul key={idx}>\n                    <li>{idx + 1}</li>\n                    <li>{journey.origin}</li>\n                    <li>{journey.destination}</li>\n                    <li></li>\n                    <li>{journey.instruction}</li>\n                    <li>\n                      {journey.driver.firstName} {journey.driver.lastName}\n                    </li>\n                    <li>{journey.status}</li>\n                    <li>action</li>\n                  </ul>\n                )\n              }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Journeys\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport DateTimePicker from 'react-datetime-picker'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst NewJourney = props => {\n\n  const [journey, setJourney] = useState(null)\n  const [vehicle, setVehicle] = useState({})\n  const [startDate, setStartDate] = useState(new Date());\n\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles/${props.match.params.id}`)\n    .then( res => {\n      setVehicle(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setJourney(journey => ({\n      ...journey, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/journeys`, journey)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/journeys')\n      }\n    })\n    .catch(console.error)\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Journey</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                  <div className=\"form-group\">\n                    <label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Origin Address\"\n                        style={{marginBottom: \"30px\"}}\n                        value={`Add a journey to vehicle ${vehicle.code} / ${vehicle.plateNumber}`}\n                        disabled\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <DateTimePicker\n                      onChange={setStartDate}\n                      value={startDate}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Origin Address:</p>\n                      <input name=\"code\" type=\"text\" placeholder=\"Origin Address\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Destination Address:</p>\n                      <input name=\"plateNumber\" type=\"text\" placeholder=\"Destination Address\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Instruction:</p>\n                      <textarea name=\"code\" type=\"text\" placeholder=\"Instructions for the driver\" onChange={handleChange} required></textarea>\n                    </label>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewJourney\n","import React, {useState, useEffect} from 'react'\nimport { Route, Redirect, HashRouter as Router } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Login from './components/Login'\nimport TerraMap from './components/map/TerraMap'\nimport Settings from './components/settings/Settings'\n\nimport Drivers from './components/settings/drivers/Drivers'\nimport NewDriver from './components/settings/drivers/NewDriver'\nimport UpdateDriver from './components/settings/drivers/UpdateDriver'\n\nimport Vehicles from './components/settings/vehicles/Vehicles'\nimport NewVehicle from './components/settings/vehicles/NewVehicle'\nimport UpdateVehicle from './components/settings/vehicles/UpdateVehicle'\n\nimport Journeys from './components/settings/journeys/Journeys'\nimport NewJourney from './components/settings/journeys/NewJourney'\n\nimport './Terra.css';\n\nconst Terra = props => {\n  const token = JSON.parse(sessionStorage.getItem('token'))\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n  const getCurrentUser = () => {\n    const user = sessionStorage.getItem('user')\n    return user ? user : false\n  }\n\n  const isAdmin= () => {\n    const user = sessionStorage.getItem('user')\n    return user && JSON.parse(user).userType === 'admin' ? user : false\n  }\n\n  return (\n    <Router>\n      <Route exact path='/login'render={props => (\n        getCurrentUser() ?\n        <Redirect to='/maps' /> :\n        <Login {...props} />\n      )}/>\n\n      <Route exact path='/maps'render={props => (\n        getCurrentUser() ?\n        <TerraMap {...props} /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings'render={props => (\n        isAdmin() ? <Settings {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers'render={props => (\n        isAdmin() ? <Drivers {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers/new'render={props => (\n        isAdmin() ? <NewDriver {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers/:id/edit'render={props => (\n        isAdmin() ? <UpdateDriver {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles'render={props => (\n        isAdmin() ? <Vehicles {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles/new'render={props => (\n        isAdmin() ? <NewVehicle {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles/:id/edit'render={props => (\n        isAdmin() ? <UpdateVehicle {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n\n      <Route exact path='/settings/journeys' render={props => (\n        isAdmin() ? <Journeys {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/journeys/vehicle/:id/new' render={props => (\n        isAdmin() ? <NewJourney {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n    </Router>\n  );\n}\n\nexport default Terra;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Terra from './Terra';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Terra />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}