{"version":3,"sources":["components/Login.js","components/NavBar.js","components/map/TerraMap.js","components/settings/Settings.js","components/settings/drivers/Drivers.js","components/settings/drivers/NewDriver.js","components/settings/drivers/UpdateDriver.js","components/settings/vehicles/Vehicles.js","components/settings/vehicles/NewVehicle.js","components/settings/vehicles/UpdateVehicle.js","components/settings/journeys/Journeys.js","components/settings/journeys/NewJourney.js","components/settings/journeys/ScheduleJourney.js","Terra.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","className","onSubmit","ev","preventDefault","axios","post","then","res","data","success","sessionStorage","setItem","JSON","stringify","token","user","defaults","headers","common","history","push","catch","console","error","type","name","onChange","e","target","value","required","style","display","marginTop","color","href","NavBar","parse","getItem","showDropdown","setShowDropdown","showMenu","setShowMenu","showJourney","setShowJourney","monitorJourney","state","checked","journey","id","onMapMenu","onClick","userType","driverJourneys","map","j","idx","vehicle","code","_id","startJourney","status","journeys","simulateJourneys","onMouseEnter","onMouseLeave","firstName","lastName","handleUrlRoute","removeItem","undefined","require","BASE_URL","bounds","routes","simulationData","socket","socketIOClient","TerraMap","setMap","setJourneys","setDriverJourneys","useEffect","get","timer","ms","Promise","setTimeout","animatePolyLine","coordinates","L","motion","polyline","auto","duration","removeOnEnd","showMarker","addTo","a","journeyId","waypoints","getRouteCoords","showRoute","Object","values","i","length","coords","emit","plotRoute","find","originGeoCode","lat","lng","destinationGeoCode","fitBounds","leafletElement","Routing","control","router","mapbox","containerClassName","on","route","removeRoute","off","remove","keys","callbacks","url","MapContainer","center","zoomControl","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","ZoomControl","position","Settings","showMapMenu","Driver","drivers","setDrivers","driver","mobileNumber","licenseNumber","setDriver","handleChange","placeholder","UpdateDriver","match","params","put","backgroundImage","photoUrl","backgroundSize","licenseExpiry","split","Vehicle","vehicles","setVehicles","plateNumber","class","locationAddress","weight","volume","setVehicle","vehicleClass","vaue","UpdateVehicle","homeAddress","Journeys","addJourney","setAddJourney","selectedVehicle","setSelectedVehicle","mapVehicleProps","imageUrl","vehicleId","disabled","origin","destination","Date","startDate","toLocaleString","endDate","instruction","NewJourney","setJourney","setStartDate","setEndDate","marginBottom","log","Terra","getCurrentUser","isAdmin","exact","path","to","render","Drivers","NewDriver","Vehicles","NewVehicle","ScheduleJourney","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7cbfac2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Login = props => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/login`, {email, password})\n    .then( res => {\n      if(res.data.success){\n        sessionStorage.setItem('token', JSON.stringify(res.data.token))\n        sessionStorage.setItem('user', JSON.stringify(res.data.user))\n        axios.defaults.headers.common['Authorization'] = `Bearer ${res.data.token}`\n        props.history.push('/maps')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div  className=\"login-wrapper\">\n      <h2>TERRAGRID NETWORKS</h2>\n      <div>\n        <h3>Log into your account</h3>\n        <form onSubmit={handleSubmit}>\n          <input type=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} required />\n          <input type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} required />\n          <button>Login</button>\n        </form>\n      </div>\n      <span style={{display:'inline-block', marginTop:'15px', color:'grey'}}>\n        see test credentials&nbsp;\n        <a href=\"https://github.com/jkups/terragrid-frontend\" target=\"_blank\">here</a>\n      </span>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport '../Terra.css'\n\nconst NavBar = props => {\n  const user = JSON.parse(sessionStorage.getItem('user'))\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [showMenu, setShowMenu] = useState(false)\n  const [showJourney, setShowJourney] = useState({})\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('token')\n    sessionStorage.removeItem('user')\n    axios.defaults.headers.common['Authorization'] = undefined\n\n    props.history.push('/login');\n  }\n\n  const monitorJourney = ev => {\n    const state = ev.target.checked === true ? true : false\n\n    setShowJourney(journey => ({\n      ...journey, [ev.target.id]: state\n    }))\n\n    props.monitorJourney(ev)\n  }\n\n  return(\n    <div className=\"navbar\">\n      {\n        props.onMapMenu ?\n        <div className=\"menu collapsed\">\n          <span onClick={() => setShowMenu(!showMenu)}>MENU</span>\n          {\n            !showMenu ? null :\n            user.userType === 'driver' ?\n            <div className=\"menu-items\">\n              {\n                props.driverJourneys.map( (j, idx) =>\n                  <div key={idx} className=\"item\">\n                    <div className=\"first\">\n                      <span>{j.vehicle.code}</span>\n                      <button name='driver' id={j._id} className=\"start-button\" onClick={props.startJourney}\n                      >\n                        Start Journey\n                      </button>\n                    </div>\n                    <div className=\"second\">\n                      <span>{j.status}</span>\n                      <span>OR</span>\n                      <span>DT</span>\n                    </div>\n                  </div>\n                )\n              }\n            </div> :\n            <div className=\"menu-items\">\n            {\n              props.journeys.map( (j, idx) =>\n                <div key={idx} className=\"item\">\n                  <div className=\"first\">\n                    <span>{j.vehicle.code}</span>\n                    <input\n                      id={j._id}\n                      type=\"checkbox\"\n                      onClick={monitorJourney}\n                      checked={\n                        showJourney[j._id] ? true : false\n                      }\n                    />\n                  </div>\n                  <div className=\"second\">\n                    <span>{j.status}</span>\n                    <span>OR</span>\n                    <span>DT</span>\n                  </div>\n                </div>\n              )\n            }\n          </div>\n          }\n        </div> : null\n      }\n      <div className=\"settings\">\n        {\n          user.userType !== 'driver' ?\n          <div onClick={props.simulateJourneys}>Simulate</div> : null\n        }\n        <div onMouseEnter={() => setShowDropdown(true)} onMouseLeave={() => setShowDropdown(false)}>\n          <div className=\"profile-image\" >\n            {user.firstName} {user.lastName} O\n          </div>\n          {\n            showDropdown ?\n            <div className=\"dropdown-wrapper\">\n              <div className=\"dropdown\">\n                {\n                  user.userType !== 'admin' ?\n                  null : props.onMapMenu ?\n                  <div onClick={() => props.handleUrlRoute('/settings')}>Settings</div> :\n                  <div onClick={() => props.handleUrlRoute('/maps')}>Maps</div>\n                }\n                <div onClick={handleLogout}>Logout</div>\n              </div>\n            </div> : null\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport socketIOClient from 'socket.io-client'\nimport NavBar from '../NavBar'\nimport Routing from './Routing'\nimport L from 'leaflet'\nimport { MapContainer, TileLayer, Popup, ZoomControl } from 'react-leaflet'\nrequire('leaflet.motion/dist/leaflet.motion.min.js')\n\nconst MAPBOX_API_KEY = 'pk.eyJ1Ijoiamt1cHMiLCJhIjoiY2tramFsN2EyMDJmNjJwcGVodms0ZDIzeiJ9.g1MbhlX-djVh_CZYt7t-dQ'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst bounds = {} //scale&zoom map to show all routes\nconst routes = {} //keep track of visible routes on map\nconst simulationData = {} //keep track for journey simulation\nconst socket = socketIOClient(BASE_URL)\n\n// const geoLocator = () => {\n//   console.log('here');\n//   navigator.geolocation.getCurrentPosition(position => {\n//     console.log(position.coords);\n//   })\n// }\n//\n// setInterval(geoLocator, 8000)\n\nconst TerraMap = props => {\n  const [map, setMap] = useState(null)\n  const [wayPoints, setWayPoints] = useState(null)\n  const [wayPointsId, setWayPointsId] = useState(null)\n  const [journeys, setJourneys] = useState([])\n  const [driverJourneys, setDriverJourneys] = useState([])\n\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n\n    if(user.userType !== 'driver'){\n      axios.get(`${BASE_URL}/journeys`)\n      .then( res => {\n        setJourneys(res.data)\n      })\n      .catch( console.error )\n\n    } else {\n      axios.get(`${BASE_URL}/journeys/driver/${user._id}`)\n      .then(res => {\n        setDriverJourneys(res.data)\n      })\n      .catch(console.error)\n    }\n  }, [])\n\n  const timer = ms => new Promise(res => setTimeout(res, ms));\n\n  const animatePolyLine = coordinates => {\n    L.motion.polyline(coordinates,\n      {\n        color: \"transparent\"\n      },\n      {\n        auto: true,\n        duration: 1000\n      },\n      {\n        removeOnEnd: true,\n        showMarker: true,\n      }\n    ).addTo(map);\n  }\n\n  const startJourney = async ev => {\n    const journeyId = ev.target.id\n    const waypoints = getRouteCoords(ev)\n    showRoute(waypoints, journeyId)\n\n    await timer(2000)\n    const coordinates = Object.values(simulationData)[0]\n\n    for(let i = 0; i < coordinates.length - 1; i++){\n      const coords = [ coordinates[i], coordinates[i + 1] ]\n\n      animatePolyLine(coords);\n      socket.emit('coords', coords, journeyId)\n\n      await timer(1000)\n    }\n  }\n\n  const monitorJourney = ev => {\n    const journeyId = ev.target.id\n    const callbacks = { [journeyId]: plotRoute }\n\n    if(ev.target.checked === true){\n      const waypoints = getRouteCoords(ev)\n      showRoute(waypoints, journeyId)\n      socket.on('coords', callbacks[journeyId])\n    } else {\n      removeRoute(journeyId)\n    }\n  }\n\n  const plotRoute = async (coords, journeyId) => {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    if(user.userType !== 'driver' && routes[journeyId]){\n      animatePolyLine(coords);\n      await timer(1000)\n    }\n  }\n\n  const simulateJourneys = () => {\n    const coordinates = Object.values(simulationData)\n\n    if(coordinates.length > 0){\n      for(let i = 0; i < coordinates.length; i++){\n        animatePolyLine(coordinates[i])\n      }\n    }\n  }\n\n  const getRouteCoords = ev => {\n    const journeyId = ev.target.id\n\n    if(ev.target.checked === true || ev.target.name === 'driver'){\n      const data = ev.target.name === 'driver' ?\n        driverJourneys.find(j => j._id === journeyId) :\n        journeys.find(j => j._id === journeyId);\n\n      return [\n        [\n          data.originGeoCode.lat,\n          data.originGeoCode.lng\n        ],\n        [\n          data.destinationGeoCode.lat,\n          data.destinationGeoCode.lng\n        ]\n      ]\n    }\n  }\n\n  const showRoute = (waypoints, journeyId) => {\n    bounds[journeyId] = waypoints\n    map.fitBounds(Object.values(bounds))\n\n    const leafletElement = L.Routing.control({\n      router: L.Routing.mapbox(MAPBOX_API_KEY),\n      waypoints: [\n        waypoints[0],\n        waypoints[1]\n      ],\n      containerClassName: 'itinerary-wrapper'\n    }).addTo(map);\n\n    leafletElement.on('routeselected', ev => {\n      routes[journeyId] = leafletElement\n      simulationData[journeyId] = ev.route.coordinates\n    })\n  }\n\n  const removeRoute = journeyId => {\n    const route = routes[journeyId]\n    delete bounds[journeyId]\n    delete routes[journeyId]\n    delete simulationData[journeyId]\n    socket.off('coords', journeyId)\n    route.remove()\n\n    if(Object.keys(bounds).length > 0){\n      map.fitBounds(Object.values(bounds))\n    }\n  }\n\n  const setSimulationData = (leafletElement, route) => {\n    routes[wayPointsId] = leafletElement\n    simulationData[wayPointsId] = route.coordinates\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        journeys={journeys}\n        driverJourneys={driverJourneys}\n        monitorJourney={monitorJourney}\n        onMapMenu={true}\n        handleUrlRoute={handleUrlRoute}\n        simulateJourneys={simulateJourneys}\n        startJourney={startJourney}\n      />\n      <MapContainer center={[-37.840935, 144.946457]} zoomControl={false} zoom={13} scrollWheelZoom={false} whenCreated={setMap}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <ZoomControl position={'bottomright'} />\n      </MapContainer>\n    </div>\n  )\n}\n\nexport default TerraMap\n","import React from 'react'\nimport NavBar from '../NavBar'\n\n\nconst Settings = props => {\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return (\n    <div>\n      <NavBar\n        showMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n    <div className=\"settings-wrapper\">\n        <h2>TERRAGRID NETWORKS</h2>\n        <div>\n          <div>Users</div>\n          <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n          <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n          <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst Driver = props => {\n\n  const [drivers, setDrivers] = useState([])\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers`)\n    .then(res => {\n      // console.log(res.data);\n      setDrivers(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <button\n                onClick={() => handleUrlRoute('/settings/drivers/new')}\n              >\n                Add Driver\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li></li>\n                <li>Full Name</li>\n                <li>Mobile Number</li>\n                <li>Email Address</li>\n                <li>Driver's License</li>\n                <li>Status</li> {\n                  // driving, unassigned\n                }\n                <li>Action</li>\n              </ul>\n              {\n                drivers.map( (driver, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li></li>\n                    <li>{driver.firstName} {driver.lastName}</li>\n                    <li>{driver.mobileNumber}</li>\n                    <li>{driver.email}</li>\n                    <li>{driver.licenseNumber}</li>\n                    <li>{driver.status}</li>\n                    <li>\n                      <span onClick={() => {handleUrlRoute(`/settings/drivers/${driver._id}/edit`)}}>Update</span>\n                      &nbsp;|&nbsp;\n                      <span>Delete</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Driver\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Driver = props => {\n\n  const [driver, setDriver] = useState(null)\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setDriver(driver => ({\n      ...driver, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/drivers`, driver)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/drivers')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Driver</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                <div>\n                  <label className=\"profile-photo\">\n                    <input  type=\"file\" />\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>First Name:</p>\n                    <input name=\"firstName\" type=\"text\" placeholder=\"First Name\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Last Name:</p>\n                    <input name=\"lastName\" type=\"text\" placeholder=\"Last Name\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Mobile Number:</p>\n                    <input name=\"mobileNumber\" type=\"text\" placeholder=\"Mobile Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Email Address:</p>\n                    <input name=\"email\" type=\"email\" placeholder=\"Email Address\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Drivers License Number:</p>\n                    <input name=\"licenseNumber\" type=\"text\" placeholder=\"License Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>License Expiry Date:</p>\n                    <input name=\"licenseExpiry\" type=\"date\" placeholder=\"Expiry Date\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Contact Address:</p>\n                    <input type=\"text\" placeholder=\"Contact address\" required/>\n                  </label>\n                </div>\n                <div className=\"button-wrapper\">\n                  <button className=\"form-button\">Save New Driver</button>\n                </div>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Driver\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst CLOUDINARY_URL = 'https://res.cloudinary.com/dxmmpe1wt/image/upload/v1612076361/'\n\nconst UpdateDriver = props => {\n\n  const [driver, setDriver] = useState(null)\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers/${props.match.params.id}`)\n    .then(res => {\n      setDriver(res.data)\n    })\n    .catch(console.error)\n  },[])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setDriver(driver => ({\n      ...driver, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.put(`${BASE_URL}/drivers/${props.match.params.id}`, driver)\n    .then( res => {\n      if(res.data.success){\n        props.history.push('/settings/drivers')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n              {\n              driver !== null ?\n              <div>\n                <div className=\"heading\">Update Driver</div>\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-wrapper\">\n                    <div>\n                      <label className=\"profile-photo update\" style={{backgroundImage: `url(${CLOUDINARY_URL}/${driver.photoUrl})`, backgroundSize: \"cover\"}}>\n                        <input  type=\"file\" />\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>First Name:</p>\n                        <input name=\"firstName\" type=\"text\" value={driver.firstName} placeholder=\"First Name\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>Last Name:</p>\n                        <input name=\"lastName\" type=\"text\" value={driver.lastName} placeholder=\"Last Name\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Mobile Number:</p>\n                        <input name=\"mobileNumber\" type=\"text\" value={driver.mobileNumber} placeholder=\"Mobile Number\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>Email Address:</p>\n                        <input name=\"email\" type=\"email\" value={driver.email}  placeholder=\"Email Address\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Drivers License Number:</p>\n                        <input name=\"licenseNumber\" type=\"text\" value={driver.licenseNumber} placeholder=\"License Number\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>License Expiry Date:</p>\n                        <input name=\"licenseExpiry\" type=\"date\" value={driver.licenseExpiry.split('T')[0]} placeholder=\"Expiry Date\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Contact Address:</p>\n                        <input type=\"text\" placeholder=\"Contact address\" required/>\n                      </label>\n                    </div>\n                    <div className=\"button-wrapper\">\n                      <button className=\"form-button\">Update Driver</button>\n                    </div>\n                  </div>\n                </form>\n              </div> : null\n              }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateDriver\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Vehicle = props => {\n\n  const [vehicles, setVehicles] = useState([])\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles`)\n    .then(res => {\n      // console.log(res.data);\n      setVehicles(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <button\n                onClick={() => handleUrlRoute('/settings/vehicles/new')}\n              >\n                Add Vehicle\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li></li>\n                <li>ID / Plate Number</li>\n                <li>Class</li>\n                <li>Curent Location</li>\n                <li>Weight  / Volume</li>\n                <li>Status</li>\n                <li>Action</li>\n              </ul>\n              {\n                vehicles.map( (vehicle, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li></li>\n                    <li>{vehicle.code} / {vehicle.plateNumber}</li>\n                    <li>{vehicle.class.split('(')[0]}</li>\n                    <li>{vehicle.locationAddress}</li>\n                    <li>{vehicle.weight} kg / {vehicle.volume} cubic</li>\n                    <li>{vehicle.status}</li>\n                    <li>\n                      <span onClick={() => {handleUrlRoute(`/settings/vehicles/${vehicle._id}/edit`)}}>Update</span>\n                      &nbsp;|&nbsp;\n                      <span>Delete</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Vehicle\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Vehicle = props => {\n\n  const [vehicle, setVehicle] = useState(null)\n  const [vehicleClass] = useState('Class 1')\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setVehicle(vehicle => ({\n      ...vehicle, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n    if(!vehicle.class) vehicle.class = vehicleClass\n\n    axios.post(`${BASE_URL}/vehicles`, vehicle)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/vehicles')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Vehicle</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                <div>\n                  <label className=\"profile-photo\">\n                    <input  type=\"file\" />\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>ID Number / Code:</p>\n                    <input name=\"code\" type=\"text\" placeholder=\"Id Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Plate Number:</p>\n                    <input name=\"plateNumber\" type=\"text\" placeholder=\"Plate Number\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Vechle Class:</p>\n                    <select name=\"class\" onChange={handleChange} required>\n                      <option value=\"Class 1\">Class 1 (Motorcycle)</option>\n                      <option vaue=\"Class 2\">Class 2 (Passenger car)</option>\n                      <option vaue=\"Class 3\">Class 3 (4 tire, single unit)</option>\n                      <option vaue=\"Class 4\">Class 4 (Bus)</option>\n                      <option vaue=\"Class 5\">Class 5 (2 axle, 6 tire, single unit)</option>\n                      <option vaue=\"Class 6\">Class 6 (3 axle, single unit)</option>\n                      <option vaue=\"Class 7\">Class 7 (4 or more axle, single unit)</option>\n                      <option vaue=\"Class 8\">Class 8 (4 or less axle, single trailer)</option>\n                      <option vaue=\"Class 9\">Class 9 (5 axle tractor semitrailer)</option>\n                      <option vaue=\"Class 10\">Class 10 (6 or more axle, single trailer)</option>\n                      <option vaue=\"Class 11\">Class 11 (5 or less axle, multi-trailer )</option>\n                      <option vaue=\"Class 12\">Class 12 (6 axle, multi-trailer)</option>\n                      <option vaue=\"Class 13\">Class 13 (7 or more axle, multi-trailer)</option>\n                    </select>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Weight (kg)</p>\n                    <input name=\"weight\" type=\"text\" placeholder=\"Weight\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Volume (cubic meter)</p>\n                    <input name=\"volume\" type=\"text\" placeholder=\"Volume\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Parking Address:</p>\n                    <input name=\"homeAddress\" type=\"text\" placeholder=\"Enter address\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"button-wrapper\">\n                  <button className=\"form-button\">Save New Vehicle</button>\n                </div>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Vehicle\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst UpdateVehicle = props => {\n\n  const [vehicle, setVehicle] = useState(null)\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles/${props.match.params.id}`)\n    .then(res => {\n      setVehicle(res.data)\n    })\n    .catch(console.error)\n  },[])\n\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setVehicle(vehicle => ({\n      ...vehicle, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.put(`${BASE_URL}/vehicles/${props.match.params.id}`, vehicle)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/vehicles')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            {\n              vehicle !== null ?\n              <div>\n                <div className=\"heading\">New Vehicle</div>\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-wrapper\">\n                  <div>\n                    <label className=\"profile-photo update\">\n                      <input  type=\"file\" />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>ID Number / Code:</p>\n                      <input name=\"code\" value={vehicle.code} type=\"text\" placeholder=\"Id Number\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Plate Number:</p>\n                      <input name=\"plateNumber\" value={vehicle.plateNumber} type=\"text\" placeholder=\"Plate Number\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Vechle Class:</p>\n                      <select name=\"class\" value={vehicle.class} onChange={handleChange} required>\n                        <option value=\"Class 1\">Class 1 (Motorcycle)</option>\n                        <option vaue=\"Class 2\">Class 2 (Passenger car)</option>\n                        <option vaue=\"Class 3\">Class 3 (4 tire, single unit)</option>\n                        <option vaue=\"Class 4\">Class 4 (Bus)</option>\n                        <option vaue=\"Class 5\">Class 5 (2 axle, 6 tire, single unit)</option>\n                        <option vaue=\"Class 6\">Class 6 (3 axle, single unit)</option>\n                        <option vaue=\"Class 7\">Class 7 (4 or more axle, single unit)</option>\n                        <option vaue=\"Class 8\">Class 8 (4 or less axle, single trailer)</option>\n                        <option vaue=\"Class 9\">Class 9 (5 axle tractor semitrailer)</option>\n                        <option vaue=\"Class 10\">Class 10 (6 or more axle, single trailer)</option>\n                        <option vaue=\"Class 11\">Class 11 (5 or less axle, multi-trailer )</option>\n                        <option vaue=\"Class 12\">Class 12 (6 axle, multi-trailer)</option>\n                        <option vaue=\"Class 13\">Class 13 (7 or more axle, multi-trailer)</option>\n                      </select>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Weight (kg)</p>\n                      <input name=\"weight\" value={vehicle.weight} type=\"text\" placeholder=\"Weight\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Volume (cubic meter)</p>\n                      <input name=\"volume\" value={vehicle.volume} type=\"text\" placeholder=\"Volume\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Parking Address:</p>\n                      <input name=\"homeAddress\" value={vehicle.homeAddress} type=\"text\" placeholder=\"Enter address\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"button-wrapper\">\n                    <button className=\"form-button\">Update Vehicle</button>\n                  </div>\n                </div>\n                </form>\n              </div> : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateVehicle\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Journeys = props => {\n\n  const [vehicles, setVehicles] = useState([])\n  const [journeys, setJourneys] = useState([])\n  const [addJourney, setAddJourney] = useState(false)\n  const [selectedVehicle, setSelectedVehicle] = useState('')\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles`)\n    .then(res => {\n      const mapVehicleProps = res.data.map( vehicle => {\n        return {\n          id: vehicle._id,\n          code: vehicle.code,\n          plateNumber: vehicle.plateNumber,\n          imageUrl: vehicle.imageUrl\n        }\n      })\n\n      setVehicles(mapVehicleProps)\n    })\n    .catch(console.error)\n  }, [])\n\n  const getJourneys = ev => {\n    const vehicleId = ev.target.value\n\n    if(vehicleId !== \"none\"){\n      axios.get(`${BASE_URL}/journeys/vehicle/${vehicleId}`)\n      .then( res => {\n        setJourneys(res.data)\n        setAddJourney(true)\n        setSelectedVehicle(vehicleId)\n      })\n      .catch(console.error)\n    } else {\n      setJourneys([])\n      setAddJourney(false)\n      setSelectedVehicle('')\n    }\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <select onChange={getJourneys} className=\"standard\">\n                <option value=\"none\">Select a vehicle</option>\n                {\n                  vehicles.map( (vehicle, idx) =>\n                    <option key={idx} value={vehicle.id}>\n                      {vehicle.code} / {vehicle.plateNumber}\n                    </option>\n                  )\n                }\n              </select>\n              <button\n                onClick={() => handleUrlRoute(`/settings/journeys/vehicle/${selectedVehicle}/new`)}\n                disabled={ !addJourney }\n                >\n                Add a Journey\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li>Origin</li>\n                <li>Destination</li>\n                <li>Duration</li>\n                <li>Instruction</li>\n                <li>Driver Assigned</li>\n                <li>Status</li>\n                <li>Action</li>\n              </ul>\n              {\n                journeys.map( (journey, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li>{journey.origin}</li>\n                    <li>{journey.destination}</li>\n                    <li>\n                      <strong>from:</strong> {new Date(journey.startDate).toLocaleString()}\n                      <br/><br/>\n                      <strong>to:</strong> {new Date(journey.endDate).toLocaleString()}\n                    </li>\n                    <li>{journey.instruction}</li>\n                    <li>\n                      {\n                        journey.driver ?\n                        <div>\n                          <span>\n                            {journey.driver.firstName}\n                          </span>\n                          <span>\n                            {journey.driver.lastName}\n                          </span>\n                        </div> : 'None assigned'\n                      }\n                    </li>\n                    <li>{journey.status}</li>\n                    <li>\n                      {\n                        journey.status === 'scheduled' ?\n                        <span>cancel</span> :\n                        <span onClick={() => handleUrlRoute(`/settings/journeys/driver/${journey._id}/schedule`)}>schedule</span>\n                      }\n                      &nbsp;|&nbsp;\n                      <span>update</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Journeys\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport DateTimePicker from 'react-datetime-picker'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst NewJourney = props => {\n\n  const [journey, setJourney] = useState(null)\n  const [vehicle, setVehicle] = useState({})\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles/${props.match.params.id}`)\n    .then( res => {\n      setVehicle(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setJourney(journey => ({\n      ...journey, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    journey.startDate = startDate\n    journey.endDate = endDate\n    journey.vehicle = props.match.params.id\n\n    axios.post(`${BASE_URL}/journeys`, journey)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/journeys')\n      }\n    })\n    .catch(console.error)\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Journey</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                  <div className=\"form-group\">\n                    <label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Origin Address\"\n                        style={{marginBottom: \"30px\"}}\n                        value={`Add a journey to vehicle ${vehicle.code} / ${vehicle.plateNumber}`}\n                        disabled\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Start Date:</p>\n                      <DateTimePicker\n                        onChange={setStartDate}\n                        value={startDate}\n                      />\n                    </label>\n                    <label>\n                      <p>End Date:</p>\n                      <DateTimePicker\n                        onChange={setEndDate}\n                        value={endDate}\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Origin Address:</p>\n                      <input name=\"origin\" type=\"text\" placeholder=\"Origin Address\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Destination Address:</p>\n                      <input name=\"destination\" type=\"text\" placeholder=\"Destination Address\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Instruction:</p>\n                      <textarea name=\"instruction\" type=\"text\" placeholder=\"Instructions for the driver\" onChange={handleChange} required></textarea>\n                    </label>\n                  </div>\n                  <div className=\"button-wrapper\">\n                    <button className=\"form-button\">Save New Journey</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewJourney\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport DateTimePicker from 'react-datetime-picker'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst NewJourney = props => {\n\n  const [drivers, setDrivers] = useState([])\n  const [driver, setDriver] = useState('')\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers`)\n    .then( res => {\n      setDrivers(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleChange = ev => {\n    console.log(ev.target.value);\n    setDriver(ev.target.value)\n  }\n\n  const handleSubmit =  ev => {\n    ev.preventDefault()\n\n    const journeyId = props.match.params.id\n    axios.put(`${BASE_URL}/journeys/${journeyId}`, {driver: driver, status: 'scheduled'})\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/journeys')\n      }\n    })\n    .catch(console.error)\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Journey</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                  <div className=\"form-group\">\n                    <label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Origin Address\"\n                        style={{marginBottom: \"30px\"}}\n                        value={'Schedule a journey for the vehicle'}\n                        disabled\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form=group\">\n                    <select onChange={handleChange} >\n                      <option value=\"none\">Select a Driver</option>\n                      {\n                        drivers.map( (driver, idx) =>\n                          <option key={idx} value={driver._id}>\n                            {driver.firstName} {driver.lastName}\n                          </option>\n                        )\n                      }\n                    </select>\n                  </div>\n                  <div className=\"button-wrapper\">\n                    <button className=\"form-button\">Schedule Journey</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewJourney\n","import React, {useState, useEffect} from 'react'\nimport { Route, Redirect, HashRouter as Router } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Login from './components/Login'\nimport TerraMap from './components/map/TerraMap'\nimport Settings from './components/settings/Settings'\n\nimport Drivers from './components/settings/drivers/Drivers'\nimport NewDriver from './components/settings/drivers/NewDriver'\nimport UpdateDriver from './components/settings/drivers/UpdateDriver'\n\nimport Vehicles from './components/settings/vehicles/Vehicles'\nimport NewVehicle from './components/settings/vehicles/NewVehicle'\nimport UpdateVehicle from './components/settings/vehicles/UpdateVehicle'\n\nimport Journeys from './components/settings/journeys/Journeys'\nimport NewJourney from './components/settings/journeys/NewJourney'\nimport ScheduleJourney from './components/settings/journeys/ScheduleJourney'\n\nimport './Terra.css';\n\nconst Terra = props => {\n  const token = JSON.parse(sessionStorage.getItem('token'))\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n  const getCurrentUser = () => {\n    const user = sessionStorage.getItem('user')\n    return user ? user : false\n  }\n\n  const isAdmin= () => {\n    const user = sessionStorage.getItem('user')\n    return user && JSON.parse(user).userType === 'admin' ? user : false\n  }\n\n  return (\n    <Router>\n      <Route exact path='/'>\n        <Redirect to='/login' />\n      </Route>\n\n      <Route exact path='/login'render={props => (\n        getCurrentUser() ?\n        <Redirect to='/maps' /> :\n        <Login {...props} />\n      )}/>\n\n      <Route exact path='/maps'render={props => (\n        getCurrentUser() ?\n        <TerraMap {...props} /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings'render={props => (\n        isAdmin() ? <Settings {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers'render={props => (\n        isAdmin() ? <Drivers {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers/new'render={props => (\n        isAdmin() ? <NewDriver {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers/:id/edit'render={props => (\n        isAdmin() ? <UpdateDriver {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles'render={props => (\n        isAdmin() ? <Vehicles {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles/new'render={props => (\n        isAdmin() ? <NewVehicle {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles/:id/edit'render={props => (\n        isAdmin() ? <UpdateVehicle {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n\n      <Route exact path='/settings/journeys' render={props => (\n        isAdmin() ? <Journeys {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/journeys/vehicle/:id/new' render={props => (\n        isAdmin() ? <NewJourney {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n    <Route exact path='/settings/journeys/driver/:id/schedule' render={props => (\n        isAdmin() ? <ScheduleJourney {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n    </Router>\n  );\n}\n\nexport default Terra;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Terra from './Terra';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Terra />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}