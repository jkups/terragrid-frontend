{"version":3,"sources":["components/Login.js","components/NavBar.js","components/map/TerraMap.js","components/settings/Settings.js","components/settings/drivers/Drivers.js","components/settings/drivers/NewDriver.js","components/settings/drivers/UpdateDriver.js","components/settings/vehicles/Vehicles.js","components/settings/vehicles/NewVehicle.js","components/settings/vehicles/UpdateVehicle.js","components/settings/journeys/Journeys.js","components/settings/journeys/NewJourney.js","components/settings/journeys/ScheduleJourney.js","Terra.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","className","onSubmit","ev","preventDefault","axios","post","then","res","data","success","sessionStorage","setItem","JSON","stringify","token","user","defaults","headers","common","history","push","catch","console","error","type","name","onChange","e","target","value","required","NavBar","parse","getItem","showDropdown","setShowDropdown","showMenu","setShowMenu","onMapMenu","onClick","userType","driverJourneys","map","j","idx","vehicle","code","id","_id","startJourney","status","journeys","toggleRoute","simulateJourneys","onMouseEnter","onMouseLeave","firstName","lastName","handleUrlRoute","removeItem","undefined","require","BASE_URL","bounds","routes","simulationData","socket","socketIOClient","TerraMap","setMap","setJourneys","setDriverJourneys","useEffect","get","timer","ms","Promise","setTimeout","on","coords","a","log","animatePolyLine","coordinates","L","motion","polyline","color","auto","duration","removeOnEnd","showMarker","addTo","Object","values","i","length","emit","journeyId","checked","find","waypoints","originGeoCode","lat","lng","destinationGeoCode","showRoute","removeRoute","fitBounds","leafletElement","Routing","control","router","mapbox","containerClassName","route","remove","keys","url","MapContainer","center","zoomControl","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","ZoomControl","position","Settings","showMapMenu","Driver","drivers","setDrivers","driver","mobileNumber","licenseNumber","setDriver","handleChange","placeholder","UpdateDriver","match","params","put","style","backgroundImage","photoUrl","backgroundSize","licenseExpiry","split","Vehicle","vehicles","setVehicles","plateNumber","class","locationAddress","weight","volume","setVehicle","vehicleClass","vaue","UpdateVehicle","homeAddress","Journeys","addJourney","setAddJourney","selectedVehicle","setSelectedVehicle","mapVehicleProps","imageUrl","vehicleId","disabled","journey","origin","destination","Date","startDate","toLocaleString","endDate","instruction","NewJourney","setJourney","setStartDate","setEndDate","marginBottom","Terra","getCurrentUser","isAdmin","exact","path","render","to","Drivers","NewDriver","Vehicles","NewVehicle","ScheduleJourney","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8e5ce84.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Login = props => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/login`, {email, password})\n    .then( res => {\n      if(res.data.success){\n        sessionStorage.setItem('token', JSON.stringify(res.data.token))\n        sessionStorage.setItem('user', JSON.stringify(res.data.user))\n        axios.defaults.headers.common['Authorization'] = `Bearer ${res.data.token}`\n        props.history.push('/maps')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div  className=\"login-wrapper\">\n      <h2>TERRAGRID NETWORKS</h2>\n      <div>\n        <h3>Log into your account</h3>\n        <form onSubmit={handleSubmit}>\n          <input type=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} required />\n          <input type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} required />\n          <button>Login</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport '../Terra.css'\n\nconst NavBar = props => {\n  const user = JSON.parse(sessionStorage.getItem('user'))\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [showMenu, setShowMenu] = useState(false)\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('token')\n    sessionStorage.removeItem('user')\n    axios.defaults.headers.common['Authorization'] = undefined\n\n    props.history.push('/login');\n  }\n\n  return(\n    <div className=\"navbar\">\n      {\n        props.onMapMenu ?\n        <div className=\"menu collapsed\">\n          <span onClick={() => setShowMenu(!showMenu)}>MENU</span>\n          {\n            !showMenu ? null :\n            user.userType === 'driver' ?\n            <div className=\"menu-items\">\n              {\n                props.driverJourneys.map( (j, idx) =>\n                  <div key={idx} className=\"item\">\n                    <div className=\"first\">\n                      <span>{j.vehicle.code}</span>\n                      <button name='driver' id={j._id} className=\"start-button\" onClick={props.startJourney}\n                      >\n                        Start Journey\n                      </button>\n                    </div>\n                    <div className=\"second\">\n                      <span>{j.status}</span>\n                      <span>OR</span>\n                      <span>DT</span>\n                    </div>\n                  </div>\n                )\n              }\n            </div> :\n            <div className=\"menu-items\">\n            {\n              props.journeys.map( (j, idx) =>\n                <div key={idx} className=\"item\">\n                  <div className=\"first\">\n                    <span>{j.vehicle.code}</span>\n                    <input\n                      id={j._id}\n                      type=\"checkbox\"\n                      onClick={props.toggleRoute}\n                    />\n                  </div>\n                  <div className=\"second\">\n                    <span>{j.status}</span>\n                    <span>OR</span>\n                    <span>DT</span>\n                  </div>\n                </div>\n              )\n            }\n          </div>\n          }\n        </div> : null\n      }\n      <div className=\"settings\">\n        {\n          user.userType !== 'driver' ?\n          <div onClick={props.simulateJourneys}>Simulate</div> : null\n        }\n        <div onMouseEnter={() => setShowDropdown(true)} onMouseLeave={() => setShowDropdown(false)}>\n          <div className=\"profile-image\" >\n            {user.firstName} {user.lastName} O\n          </div>\n          {\n            showDropdown ?\n            <div className=\"dropdown-wrapper\">\n              <div className=\"dropdown\">\n                {\n                  user.userType !== 'admin' ?\n                  null : props.onMapMenu ?\n                  <div onClick={() => props.handleUrlRoute('/settings')}>Settings</div> :\n                  <div onClick={() => props.handleUrlRoute('/maps')}>Maps</div>\n                }\n                <div onClick={handleLogout}>Logout</div>\n              </div>\n            </div> : null\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport socketIOClient from 'socket.io-client'\nimport NavBar from '../NavBar'\nimport Routing from './Routing'\nimport L from 'leaflet'\nimport { MapContainer, TileLayer, Popup, ZoomControl } from 'react-leaflet'\nrequire('leaflet.motion/dist/leaflet.motion.min.js')\n\nconst MAPBOX_API_KEY = 'pk.eyJ1Ijoiamt1cHMiLCJhIjoiY2tramFsN2EyMDJmNjJwcGVodms0ZDIzeiJ9.g1MbhlX-djVh_CZYt7t-dQ'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst bounds = {} //scale&zoom map to show all routes\nconst routes = {} //keep track of visible routes on map\nconst simulationData = {} //keep track for journey simulation\nconst socket = socketIOClient(BASE_URL)\n\n// const geoLocator = () => {\n//   console.log('here');\n//   navigator.geolocation.getCurrentPosition(position => {\n//     console.log(position.coords);\n//   })\n// }\n//\n// setInterval(geoLocator, 8000)\n\nconst TerraMap = props => {\n  const [map, setMap] = useState(null)\n  const [wayPoints, setWayPoints] = useState(null)\n  const [wayPointsId, setWayPointsId] = useState(null)\n  const [journeys, setJourneys] = useState([])\n  const [driverJourneys, setDriverJourneys] = useState([])\n\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n\n    if(user.userType !== 'driver'){\n      axios.get(`${BASE_URL}/journeys`)\n      .then( res => {\n        setJourneys(res.data)\n      })\n      .catch( console.error )\n\n    } else {\n      axios.get(`${BASE_URL}/journeys/driver/${user._id}`)\n      .then(res => {\n        setDriverJourneys(res.data)\n      })\n      .catch(console.error)\n    }\n  }, [])\n\n  const timer = ms => new Promise(res => setTimeout(res, ms));\n\n  useEffect(() => {\n    socket.on('coords', async coords => {\n      const user = JSON.parse(sessionStorage.getItem('user'))\n\n      if(user.userType !== 'driver'){\n        console.log(coords);\n        // animatePolyLine(coords);\n        // await timer(10000)\n      }\n    })\n  },[])\n\n  const animatePolyLine = async coordinates => {\n    const polyLineElement = L.motion.polyline(coordinates,\n      {\n        color: \"transparent\"\n      },\n      {\n        auto: true,\n        duration: 1000\n      },\n      {\n        removeOnEnd: true,\n        showMarker: true,\n      }\n    ).addTo(map);\n  }\n\n\n  const startJourney = async ev => {\n    toggleRoute(ev)\n\n    await timer(2000)\n    const coordinates = Object.values(simulationData)[0]\n\n    for(let i = 0; i < coordinates.length - 1; i++){\n      const coords = [ coordinates[i], coordinates[i + 1] ]\n\n      animatePolyLine(coords);\n      socket.emit('coords', coords, ev.target.id)\n\n      await timer(1000)\n    }\n  }\n\n  const simulateJourneys = () => {\n    const coordinates = Object.values(simulationData)\n\n    if(coordinates.length > 0){\n      for(let i = 0; i < coordinates.length; i++){\n        animatePolyLine(coordinates[i])\n      }\n    }\n  }\n\n  const toggleRoute = ev => {\n    const journeyId = ev.target.id\n\n    if(ev.target.checked === true || ev.target.name === 'driver'){\n      const data = ev.target.name === 'driver' ?\n        driverJourneys.find(j => j._id === journeyId) :\n        journeys.find(j => j._id === journeyId);\n\n      const waypoints = [\n        [\n          data.originGeoCode.lat,\n          data.originGeoCode.lng\n        ],\n        [\n          data.destinationGeoCode.lat,\n          data.destinationGeoCode.lng\n        ]\n      ]\n\n      showRoute(waypoints, journeyId)\n\n    } else {\n      removeRoute(journeyId)\n    }\n  }\n\n  const showRoute = (waypoints, journeyId) => {\n    bounds[journeyId] = waypoints\n    map.fitBounds(Object.values(bounds))\n\n    const leafletElement = L.Routing.control({\n      router: L.Routing.mapbox(MAPBOX_API_KEY),\n      waypoints: [\n        waypoints[0],\n        waypoints[1]\n      ],\n      containerClassName: 'itinerary-wrapper'\n    }).addTo(map);\n\n    leafletElement.on('routeselected', ev => {\n      routes[journeyId] = leafletElement\n      simulationData[journeyId] = ev.route.coordinates\n    })\n  }\n\n  const removeRoute = journeyId => {\n    const route = routes[journeyId]\n    delete bounds[journeyId]\n    delete routes[journeyId]\n    delete simulationData[journeyId]\n    route.remove()\n\n    if(Object.keys(bounds).length > 0){\n      map.fitBounds(Object.values(bounds))\n    }\n  }\n\n  const setSimulationData = (leafletElement, route) => {\n    routes[wayPointsId] = leafletElement\n    simulationData[wayPointsId] = route.coordinates\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        journeys={journeys}\n        driverJourneys={driverJourneys}\n        toggleRoute={toggleRoute}\n        onMapMenu={true}\n        handleUrlRoute={handleUrlRoute}\n        simulateJourneys={simulateJourneys}\n        startJourney={startJourney}\n      />\n      <MapContainer center={[-37.840935, 144.946457]} zoomControl={false} zoom={13} scrollWheelZoom={false} whenCreated={setMap}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <ZoomControl position={'bottomright'} />\n      </MapContainer>\n    </div>\n  )\n}\n\nexport default TerraMap\n","import React from 'react'\nimport NavBar from '../NavBar'\n\n\nconst Settings = props => {\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return (\n    <div>\n      <NavBar\n        showMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n    <div className=\"settings-wrapper\">\n        <h2>TERRAGRID NETWORKS</h2>\n        <div>\n          <div>Users</div>\n          <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n          <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n          <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst Driver = props => {\n\n  const [drivers, setDrivers] = useState([])\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers`)\n    .then(res => {\n      // console.log(res.data);\n      setDrivers(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <button\n                onClick={() => handleUrlRoute('/settings/drivers/new')}\n              >\n                Add Driver\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li></li>\n                <li>Full Name</li>\n                <li>Mobile Number</li>\n                <li>Email Address</li>\n                <li>Driver's License</li>\n                <li>Status</li> {\n                  // driving, unassigned\n                }\n                <li>Action</li>\n              </ul>\n              {\n                drivers.map( (driver, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li></li>\n                    <li>{driver.firstName} {driver.lastName}</li>\n                    <li>{driver.mobileNumber}</li>\n                    <li>{driver.email}</li>\n                    <li>{driver.licenseNumber}</li>\n                    <li>{driver.status}</li>\n                    <li>\n                      <span onClick={() => {handleUrlRoute(`/settings/drivers/${driver._id}/edit`)}}>Update</span>\n                      &nbsp;|&nbsp;\n                      <span>Delete</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Driver\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Driver = props => {\n\n  const [driver, setDriver] = useState(null)\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setDriver(driver => ({\n      ...driver, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/drivers`, driver)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/drivers')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Driver</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                <div>\n                  <label className=\"profile-photo\">\n                    <input  type=\"file\" />\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>First Name:</p>\n                    <input name=\"firstName\" type=\"text\" placeholder=\"First Name\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Last Name:</p>\n                    <input name=\"lastName\" type=\"text\" placeholder=\"Last Name\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Mobile Number:</p>\n                    <input name=\"mobileNumber\" type=\"text\" placeholder=\"Mobile Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Email Address:</p>\n                    <input name=\"email\" type=\"email\" placeholder=\"Email Address\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Drivers License Number:</p>\n                    <input name=\"licenseNumber\" type=\"text\" placeholder=\"License Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>License Expiry Date:</p>\n                    <input name=\"licenseExpiry\" type=\"date\" placeholder=\"Expiry Date\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Contact Address:</p>\n                    <input type=\"text\" placeholder=\"Contact address\" required/>\n                  </label>\n                </div>\n                <div className=\"button-wrapper\">\n                  <button className=\"form-button\">Save New Driver</button>\n                </div>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Driver\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\nconst CLOUDINARY_URL = 'https://res.cloudinary.com/dxmmpe1wt/image/upload/v1612076361/'\n\nconst UpdateDriver = props => {\n\n  const [driver, setDriver] = useState(null)\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers/${props.match.params.id}`)\n    .then(res => {\n      setDriver(res.data)\n    })\n    .catch(console.error)\n  },[])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setDriver(driver => ({\n      ...driver, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.put(`${BASE_URL}/drivers/${props.match.params.id}`, driver)\n    .then( res => {\n      if(res.data.success){\n        props.history.push('/settings/drivers')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n              {\n              driver !== null ?\n              <div>\n                <div className=\"heading\">Update Driver</div>\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-wrapper\">\n                    <div>\n                      <label className=\"profile-photo update\" style={{backgroundImage: `url(${CLOUDINARY_URL}/${driver.photoUrl})`, backgroundSize: \"cover\"}}>\n                        <input  type=\"file\" />\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>First Name:</p>\n                        <input name=\"firstName\" type=\"text\" value={driver.firstName} placeholder=\"First Name\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>Last Name:</p>\n                        <input name=\"lastName\" type=\"text\" value={driver.lastName} placeholder=\"Last Name\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Mobile Number:</p>\n                        <input name=\"mobileNumber\" type=\"text\" value={driver.mobileNumber} placeholder=\"Mobile Number\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>Email Address:</p>\n                        <input name=\"email\" type=\"email\" value={driver.email}  placeholder=\"Email Address\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Drivers License Number:</p>\n                        <input name=\"licenseNumber\" type=\"text\" value={driver.licenseNumber} placeholder=\"License Number\" onChange={handleChange} required/>\n                      </label>\n                      <label>\n                        <p>License Expiry Date:</p>\n                        <input name=\"licenseExpiry\" type=\"date\" value={driver.licenseExpiry.split('T')[0]} placeholder=\"Expiry Date\" onChange={handleChange} required/>\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <p>Contact Address:</p>\n                        <input type=\"text\" placeholder=\"Contact address\" required/>\n                      </label>\n                    </div>\n                    <div className=\"button-wrapper\">\n                      <button className=\"form-button\">Update Driver</button>\n                    </div>\n                  </div>\n                </form>\n              </div> : null\n              }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateDriver\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Vehicle = props => {\n\n  const [vehicles, setVehicles] = useState([])\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles`)\n    .then(res => {\n      // console.log(res.data);\n      setVehicles(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <button\n                onClick={() => handleUrlRoute('/settings/vehicles/new')}\n              >\n                Add Vehicle\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li></li>\n                <li>ID / Plate Number</li>\n                <li>Class</li>\n                <li>Curent Location</li>\n                <li>Weight  / Volume</li>\n                <li>Status</li>\n                <li>Action</li>\n              </ul>\n              {\n                vehicles.map( (vehicle, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li></li>\n                    <li>{vehicle.code} / {vehicle.plateNumber}</li>\n                    <li>{vehicle.class.split('(')[0]}</li>\n                    <li>{vehicle.locationAddress}</li>\n                    <li>{vehicle.weight} kg / {vehicle.volume} cubic</li>\n                    <li>{vehicle.status}</li>\n                    <li>\n                      <span onClick={() => {handleUrlRoute(`/settings/vehicles/${vehicle._id}/edit`)}}>Update</span>\n                      &nbsp;|&nbsp;\n                      <span>Delete</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Vehicle\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Vehicle = props => {\n\n  const [vehicle, setVehicle] = useState(null)\n  const [vehicleClass] = useState('Class 1')\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setVehicle(vehicle => ({\n      ...vehicle, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n    if(!vehicle.class) vehicle.class = vehicleClass\n\n    axios.post(`${BASE_URL}/vehicles`, vehicle)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/vehicles')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Vehicle</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                <div>\n                  <label className=\"profile-photo\">\n                    <input  type=\"file\" />\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>ID Number / Code:</p>\n                    <input name=\"code\" type=\"text\" placeholder=\"Id Number\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Plate Number:</p>\n                    <input name=\"plateNumber\" type=\"text\" placeholder=\"Plate Number\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Vechle Class:</p>\n                    <select name=\"class\" onChange={handleChange} required>\n                      <option value=\"Class 1\">Class 1 (Motorcycle)</option>\n                      <option vaue=\"Class 2\">Class 2 (Passenger car)</option>\n                      <option vaue=\"Class 3\">Class 3 (4 tire, single unit)</option>\n                      <option vaue=\"Class 4\">Class 4 (Bus)</option>\n                      <option vaue=\"Class 5\">Class 5 (2 axle, 6 tire, single unit)</option>\n                      <option vaue=\"Class 6\">Class 6 (3 axle, single unit)</option>\n                      <option vaue=\"Class 7\">Class 7 (4 or more axle, single unit)</option>\n                      <option vaue=\"Class 8\">Class 8 (4 or less axle, single trailer)</option>\n                      <option vaue=\"Class 9\">Class 9 (5 axle tractor semitrailer)</option>\n                      <option vaue=\"Class 10\">Class 10 (6 or more axle, single trailer)</option>\n                      <option vaue=\"Class 11\">Class 11 (5 or less axle, multi-trailer )</option>\n                      <option vaue=\"Class 12\">Class 12 (6 axle, multi-trailer)</option>\n                      <option vaue=\"Class 13\">Class 13 (7 or more axle, multi-trailer)</option>\n                    </select>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Weight (kg)</p>\n                    <input name=\"weight\" type=\"text\" placeholder=\"Weight\" onChange={handleChange} required/>\n                  </label>\n                  <label>\n                    <p>Volume (cubic meter)</p>\n                    <input name=\"volume\" type=\"text\" placeholder=\"Volume\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    <p>Parking Address:</p>\n                    <input name=\"homeAddress\" type=\"text\" placeholder=\"Enter address\" onChange={handleChange} required/>\n                  </label>\n                </div>\n                <div className=\"button-wrapper\">\n                  <button className=\"form-button\">Save New Vehicle</button>\n                </div>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Vehicle\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst UpdateVehicle = props => {\n\n  const [vehicle, setVehicle] = useState(null)\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles/${props.match.params.id}`)\n    .then(res => {\n      setVehicle(res.data)\n    })\n    .catch(console.error)\n  },[])\n\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setVehicle(vehicle => ({\n      ...vehicle, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.put(`${BASE_URL}/vehicles/${props.match.params.id}`, vehicle)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/vehicles')\n      }\n    })\n    .catch(console.error)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            {\n              vehicle !== null ?\n              <div>\n                <div className=\"heading\">New Vehicle</div>\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-wrapper\">\n                  <div>\n                    <label className=\"profile-photo update\">\n                      <input  type=\"file\" />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>ID Number / Code:</p>\n                      <input name=\"code\" value={vehicle.code} type=\"text\" placeholder=\"Id Number\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Plate Number:</p>\n                      <input name=\"plateNumber\" value={vehicle.plateNumber} type=\"text\" placeholder=\"Plate Number\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Vechle Class:</p>\n                      <select name=\"class\" value={vehicle.class} onChange={handleChange} required>\n                        <option value=\"Class 1\">Class 1 (Motorcycle)</option>\n                        <option vaue=\"Class 2\">Class 2 (Passenger car)</option>\n                        <option vaue=\"Class 3\">Class 3 (4 tire, single unit)</option>\n                        <option vaue=\"Class 4\">Class 4 (Bus)</option>\n                        <option vaue=\"Class 5\">Class 5 (2 axle, 6 tire, single unit)</option>\n                        <option vaue=\"Class 6\">Class 6 (3 axle, single unit)</option>\n                        <option vaue=\"Class 7\">Class 7 (4 or more axle, single unit)</option>\n                        <option vaue=\"Class 8\">Class 8 (4 or less axle, single trailer)</option>\n                        <option vaue=\"Class 9\">Class 9 (5 axle tractor semitrailer)</option>\n                        <option vaue=\"Class 10\">Class 10 (6 or more axle, single trailer)</option>\n                        <option vaue=\"Class 11\">Class 11 (5 or less axle, multi-trailer )</option>\n                        <option vaue=\"Class 12\">Class 12 (6 axle, multi-trailer)</option>\n                        <option vaue=\"Class 13\">Class 13 (7 or more axle, multi-trailer)</option>\n                      </select>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Weight (kg)</p>\n                      <input name=\"weight\" value={vehicle.weight} type=\"text\" placeholder=\"Weight\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Volume (cubic meter)</p>\n                      <input name=\"volume\" value={vehicle.volume} type=\"text\" placeholder=\"Volume\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Parking Address:</p>\n                      <input name=\"homeAddress\" value={vehicle.homeAddress} type=\"text\" placeholder=\"Enter address\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"button-wrapper\">\n                    <button className=\"form-button\">Update Vehicle</button>\n                  </div>\n                </div>\n                </form>\n              </div> : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateVehicle\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst Journeys = props => {\n\n  const [vehicles, setVehicles] = useState([])\n  const [journeys, setJourneys] = useState([])\n  const [addJourney, setAddJourney] = useState(false)\n  const [selectedVehicle, setSelectedVehicle] = useState('')\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles`)\n    .then(res => {\n      const mapVehicleProps = res.data.map( vehicle => {\n        return {\n          id: vehicle._id,\n          code: vehicle.code,\n          plateNumber: vehicle.plateNumber,\n          imageUrl: vehicle.imageUrl\n        }\n      })\n\n      setVehicles(mapVehicleProps)\n    })\n    .catch(console.error)\n  }, [])\n\n  const getJourneys = ev => {\n    const vehicleId = ev.target.value\n\n    if(vehicleId !== \"none\"){\n      axios.get(`${BASE_URL}/journeys/vehicle/${vehicleId}`)\n      .then( res => {\n        setJourneys(res.data)\n        setAddJourney(true)\n        setSelectedVehicle(vehicleId)\n      })\n      .catch(console.error)\n    } else {\n      setJourneys([])\n      setAddJourney(false)\n      setSelectedVehicle('')\n    }\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-list\">\n            <div>\n              <select onChange={getJourneys} className=\"standard\">\n                <option value=\"none\">Select a vehicle</option>\n                {\n                  vehicles.map( (vehicle, idx) =>\n                    <option key={idx} value={vehicle.id}>\n                      {vehicle.code} / {vehicle.plateNumber}\n                    </option>\n                  )\n                }\n              </select>\n              <button\n                onClick={() => handleUrlRoute(`/settings/journeys/vehicle/${selectedVehicle}/new`)}\n                disabled={ !addJourney }\n                >\n                Add a Journey\n              </button>\n            </div>\n            <div className=\"entity-list\">\n              <ul className=\"heading\">\n                <li></li>\n                <li>Origin</li>\n                <li>Destination</li>\n                <li>Duration</li>\n                <li>Instruction</li>\n                <li>Driver Assigned</li>\n                <li>Status</li>\n                <li>Action</li>\n              </ul>\n              {\n                journeys.map( (journey, idx) =>\n                  <ul key={idx} className=\"entity-row\">\n                    <li>{idx + 1}</li>\n                    <li>{journey.origin}</li>\n                    <li>{journey.destination}</li>\n                    <li>\n                      <strong>from:</strong> {new Date(journey.startDate).toLocaleString()}\n                      <br/><br/>\n                      <strong>to:</strong> {new Date(journey.endDate).toLocaleString()}\n                    </li>\n                    <li>{journey.instruction}</li>\n                    <li>\n                      {\n                        journey.driver ?\n                        <div>\n                          <span>\n                            {journey.driver.firstName}\n                          </span>\n                          <span>\n                            {journey.driver.lastName}\n                          </span>\n                        </div> : 'None assigned'\n                      }\n                    </li>\n                    <li>{journey.status}</li>\n                    <li>\n                      {\n                        journey.status === 'scheduled' ?\n                        <span>cancel</span> :\n                        <span onClick={handleUrlRoute(`/settings/journeys/driver/${journey._id}/schedule`)}>schedule</span>\n                      }\n                      &nbsp;|&nbsp;\n                      <span>update</span>\n                    </li>\n                  </ul>\n                )\n              }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Journeys\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport DateTimePicker from 'react-datetime-picker'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst NewJourney = props => {\n\n  const [journey, setJourney] = useState(null)\n  const [vehicle, setVehicle] = useState({})\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vehicles/${props.match.params.id}`)\n    .then( res => {\n      setVehicle(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleChange = ev => {\n    const name = ev.target.name\n    setJourney(journey => ({\n      ...journey, [name]: ev.target.value\n    }))\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    journey.startDate = startDate\n    journey.endDate = endDate\n    journey.vehicle = props.match.params.id\n\n    axios.post(`${BASE_URL}/journeys`, journey)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/journeys')\n      }\n    })\n    .catch(console.error)\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Journey</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                  <div className=\"form-group\">\n                    <label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Origin Address\"\n                        style={{marginBottom: \"30px\"}}\n                        value={`Add a journey to vehicle ${vehicle.code} / ${vehicle.plateNumber}`}\n                        disabled\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Start Date:</p>\n                      <DateTimePicker\n                        onChange={setStartDate}\n                        value={startDate}\n                      />\n                    </label>\n                    <label>\n                      <p>End Date:</p>\n                      <DateTimePicker\n                        onChange={setEndDate}\n                        value={endDate}\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Origin Address:</p>\n                      <input name=\"origin\" type=\"text\" placeholder=\"Origin Address\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Destination Address:</p>\n                      <input name=\"destination\" type=\"text\" placeholder=\"Destination Address\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Instruction:</p>\n                      <textarea name=\"instruction\" type=\"text\" placeholder=\"Instructions for the driver\" onChange={handleChange} required></textarea>\n                    </label>\n                  </div>\n                  <div className=\"button-wrapper\">\n                    <button className=\"form-button\">Save New Journey</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewJourney\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport DateTimePicker from 'react-datetime-picker'\nimport NavBar from '../../NavBar'\n\nconst BASE_URL = 'https://terragrid.herokuapp.com'\n\nconst NewJourney = props => {\n\n  const [drivers, setDrivers] = useState([])\n  const [driver, setDriver] = useState('')\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/drivers`)\n    .then( res => {\n      setDrivers(res.data)\n    })\n    .catch(console.error)\n  }, [])\n\n  const handleChange = ev => {\n    setDriver(ev.target.id)\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n\n    axios.post(`${BASE_URL}/journeys`, journey)\n    .then(res => {\n      if(res.data.success){\n        props.history.push('/settings/journeys')\n      }\n    })\n    .catch(console.error)\n  }\n\n  const handleUrlRoute = url => {\n    props.history.push(url)\n  }\n\n  return(\n    <div>\n      <NavBar\n        {...props}\n        onMapMenu={false}\n        handleUrlRoute={handleUrlRoute}\n      />\n      <div className=\"admin-wrapper\">\n        <div>\n          <div className=\"admin-sidebar\">\n            <div>Users</div>\n            <div onClick={() => handleUrlRoute('/settings/drivers')}>Drivers</div>\n\n            <div onClick={() => handleUrlRoute('/settings/vehicles')}>Vehicles</div>\n\n            <div onClick={() => handleUrlRoute('/settings/journeys')}>Journeys</div>\n          </div>\n          <div className=\"admin-form\">\n            <div>\n              <div className=\"heading\">New Journey</div>\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-wrapper\">\n                  <div className=\"form-group\">\n                    <label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Origin Address\"\n                        style={{marginBottom: \"30px\"}}\n                        value={`Add a journey to vehicle ${vehicle.code} / ${vehicle.plateNumber}`}\n                        disabled\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Start Date:</p>\n                      <DateTimePicker\n                        onChange={setStartDate}\n                        value={startDate}\n                      />\n                    </label>\n                    <label>\n                      <p>End Date:</p>\n                      <DateTimePicker\n                        onChange={setEndDate}\n                        value={endDate}\n                      />\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Origin Address:</p>\n                      <input name=\"origin\" type=\"text\" placeholder=\"Origin Address\" onChange={handleChange} required/>\n                    </label>\n                    <label>\n                      <p>Destination Address:</p>\n                      <input name=\"destination\" type=\"text\" placeholder=\"Destination Address\" onChange={handleChange} required/>\n                    </label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>\n                      <p>Instruction:</p>\n                      <textarea name=\"instruction\" type=\"text\" placeholder=\"Instructions for the driver\" onChange={handleChange} required></textarea>\n                    </label>\n                  </div>\n                  <div className=\"button-wrapper\">\n                    <button className=\"form-button\">Save New Journey</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewJourney\n","import React, {useState, useEffect} from 'react'\nimport { Route, Redirect, HashRouter as Router } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Login from './components/Login'\nimport TerraMap from './components/map/TerraMap'\nimport Settings from './components/settings/Settings'\n\nimport Drivers from './components/settings/drivers/Drivers'\nimport NewDriver from './components/settings/drivers/NewDriver'\nimport UpdateDriver from './components/settings/drivers/UpdateDriver'\n\nimport Vehicles from './components/settings/vehicles/Vehicles'\nimport NewVehicle from './components/settings/vehicles/NewVehicle'\nimport UpdateVehicle from './components/settings/vehicles/UpdateVehicle'\n\nimport Journeys from './components/settings/journeys/Journeys'\nimport NewJourney from './components/settings/journeys/NewJourney'\nimport ScheduleJourney from './components/settings/journeys/ScheduleJourney'\n\nimport './Terra.css';\n\nconst Terra = props => {\n  const token = JSON.parse(sessionStorage.getItem('token'))\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n  const getCurrentUser = () => {\n    const user = sessionStorage.getItem('user')\n    return user ? user : false\n  }\n\n  const isAdmin= () => {\n    const user = sessionStorage.getItem('user')\n    return user && JSON.parse(user).userType === 'admin' ? user : false\n  }\n\n  return (\n    <Router>\n      <Route exact path='/login'render={props => (\n        getCurrentUser() ?\n        <Redirect to='/maps' /> :\n        <Login {...props} />\n      )}/>\n\n      <Route exact path='/maps'render={props => (\n        getCurrentUser() ?\n        <TerraMap {...props} /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings'render={props => (\n        isAdmin() ? <Settings {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers'render={props => (\n        isAdmin() ? <Drivers {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers/new'render={props => (\n        isAdmin() ? <NewDriver {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/drivers/:id/edit'render={props => (\n        isAdmin() ? <UpdateDriver {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles'render={props => (\n        isAdmin() ? <Vehicles {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles/new'render={props => (\n        isAdmin() ? <NewVehicle {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/vehicles/:id/edit'render={props => (\n        isAdmin() ? <UpdateVehicle {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n\n      <Route exact path='/settings/journeys' render={props => (\n        isAdmin() ? <Journeys {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n      <Route exact path='/settings/journeys/vehicle/:id/new' render={props => (\n        isAdmin() ? <NewJourney {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n    <Route exact path='/settings/journeys/driver/:id/schedule' render={props => (\n        isAdmin() ? <ScheduleJourney {...props} /> :\n        getCurrentUser() ? <Redirect to='/maps' /> :\n        <Redirect to='/login' />\n      )}/>\n\n    </Router>\n  );\n}\n\nexport default Terra;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Terra from './Terra';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Terra />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}